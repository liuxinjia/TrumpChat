<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="closePBOx.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJ
        TUUH4gsUEAILhjH5igAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAOoSURBVHhe
        7Vu9btswEFanrh37t2TrE3RoYdnoVuQ5uvURisIvUMSVXPQdDM9dgxSWUHQ3XDuABw/J6iFARvc+8oRa
        8tmiRMmWynzAlzghebw7kzzyKHl1I3w7eR50ovPAjz6FfjQe+lEU+vGUPt8Q75n0OZ7qsmiMumiDtiym
        XQg68Wsy4AsZsyJuLLmCLMhk8c3ERe/yybA7+Uzf5FIwoiLGS/SBvrjb0wPKkHJ94jqtbK1EX/2TOmLj
        bR4FnclHVkZS8hhcQwfowmodB6F/dRZ24ktBodNQ6XJ1xurVi6AbfaC5eCcqclLGd9CN1aweesirlV3o
        vDmEjpVPieD9j8ckfJTtrMEcQWdW3w7K+CbNd1OSztZOwFAiYW365rMcWU2HNsz5PMIGNqcY9GovC20b
        C0cHFecbGerKErYY7hPUvG/jopdHssloPeDtrSyk5YRtbKYMPtjY7u3RfvDVj9/QbzokTW63ygpSte2z
        rAHRWreDByiqgFOd1NCQpHAvfsXiFL71fj+lstlu3VzO0JbFKEC2nUMV+ywuDftvf9f4BBedn8+G3eiP
        3G6XqIs23DyFCpwgjwKdzBAbGHC/8QlgENWd77bd4Xyf8QlsnQBbWdQ/INsiVTbgOs/4BMjxUf1DTpib
        5gG1E8qO2HjJYjSQb5MrGnHAYozATlhkZICLoklQaoOFMSvHiKkco82WFys0izHG93fxC2q77YQF/sfF
        xuDokNLHlKktMv3DJnsrr6o5YCdcg2WMB9A361CGKy1ED0mpgiEnt9lwZYqg9+slyH8Wgg6vliERU46G
        wrlYWIyzvJW7SnBEKbO3SBG2e3xjI1YowkOxu0qgjyJ7ikOE7ZhH42yBBY3DWBnwdDXZS5hy7PF9nFRY
        lrU4oQbjN7AdGyBcVIoVLFgqrO2DEDYrYjzFFMAtrVBozUqcUJ/xijdwAK6npcIqeF02zAFoCxkZmVXy
        /sEB9MP1KeD4IvgQBl3fCDm/FXb+MMTDSqxgxpYfhwH6w92ECID0kFDBiP9FSsz5pCiAVLFU0YDtT4sD
        zl+MOH81BlChu5ejgP0oUET7dl6PA04/IAE4/4gM4PRDUgmcfkwugc0WuSlMbXmLQq0HLj8qCzj9sHQC
        5YR2jYTqHpdPgKHUhjUBOloP+0PQ0cHBV2a2ofYJTVoXlC5HemkqgZ4Sjr42tw0+QOEUeUxHoK/TvjiZ
        BZTRSRXHXp2VgHwbRwx3Xp7eB+T4yICGvj7veX8Bm8P9U9TvNqEAAAAASUVORK5CYII=
</value>
  </data>
</root>